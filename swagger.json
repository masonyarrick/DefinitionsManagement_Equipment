{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/BHP7/DefinitionsManagement_Equipment/1.0.0-oas3"
  }, {
    "url" : "https://virtserver.swaggerhub.com/BHP7/DefinitionsManagement/1.0.0"
  } ],
  "info" : {
    "description" : "Product definition management shall be defined as the collection of activities that manage all of the Level 3 information about the product required for manufacturing, including the product production rules. Product definition information is shared between product production rules, bill of material and bill of resources. The product production rules contain the information used to instruct a manufacturing operation how to produce a product. This may be called a work master (ISA-95 Part 4), general, site, or master recipe (ANSI/ISA-88.00.01 and IEC 61512-1 definitions), standard operating procedure (SOP), standard operating conditions (SOC), routing, or assembly steps based on the production strategy used. The product definition information is made available to other Level 3 functions and to Level 2 functions as required. Product definition management includes management of the distribution of product production rules. Some of the product production rules may exist in Level 2 and Level 1 equipment. When that is the case, downloads of this information shall be coordinated with other manufacturing operations management functions to avoid affecting production. This information may be included as part of operational commands when the download is part of a production execution management activity.",
    "version" : "1.0.0-oas3",
    "title" : "Definitions Management Equipment API",
    "contact" : {
      "email" : "mason.yarrick@bhp.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "paths" : {
    "/equipmentClass/{id}" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "gets equipment classes",
        "operationId" : "getEquipmentClass",
        "description" : "Gets equipment classes with specific IDs\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Equipment Class ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "version",
          "description" : "The version of the spec to get the class for",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EquipmentClass"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "admins" ],
        "summary" : "deletes equipment classes",
        "operationId" : "deleteEquipmentClass",
        "description" : "Deletes equipment classes with specific IDs\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Equipment Class ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Deleted"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "put" : {
        "tags" : [ "admins" ],
        "summary" : "updates equipment classes",
        "operationId" : "updateEquipmentClass",
        "description" : "Updates equipment classes with specific IDs\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Equipment Class ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EquipmentClass"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Updated"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/equipmentClass" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "searches for equipment classes",
        "operationId" : "findEquipmentClasses",
        "description" : "Searches for equipment classes with specific properties\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "id",
          "description" : "the unique identifier of the equipment class to retrieve",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "hierarchyScopeId",
          "description" : "The hierarchy scope to retrieve equipment classes by",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "the number of results to return",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        }, {
          "in" : "query",
          "name" : "version",
          "description" : "the version of the spec to get classes for",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EquipmentClass"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "creates equipment classes",
        "operationId" : "createEquipmentClass",
        "description" : "Create new items of equipment classes in the system\n",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EquipmentClass"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/equipment/{id}" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "gets equipment",
        "operationId" : "getEquipmentItem",
        "description" : "Gets equipment with specific IDs\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Equipment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "id",
          "description" : "The version of the spec to get the equipment for",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Equipment"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "admins" ],
        "summary" : "deletes equipment",
        "operationId" : "deleteEquipment",
        "description" : "Delete existing items of equipment from the system\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Equipment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Deleted"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      },
      "put" : {
        "tags" : [ "admins" ],
        "summary" : "updates equipment",
        "operationId" : "updateEquipment",
        "description" : "Update existing items of equipment in the system\n",
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "Equipment ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Equipment"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Updated"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    },
    "/equipment" : {
      "get" : {
        "tags" : [ "developers" ],
        "summary" : "retrieves equipment",
        "operationId" : "searchEquipment",
        "description" : "By passing in the appropriate options, you can search for available equipment items in the system\n",
        "parameters" : [ {
          "in" : "query",
          "name" : "id",
          "description" : "the unique identifier of the equipment to retrieve",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "hierarchyScopeId",
          "description" : "The hierarchy scope to retrieve equipment by",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "limit",
          "description" : "the number of results to return",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        }, {
          "in" : "query",
          "name" : "version",
          "description" : "the version of the spec to get equipment for",
          "required" : false,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Equipment"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "creates equipment",
        "operationId" : "createEquipment",
        "description" : "Create new items of equipment in the system\n",
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Equipment"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad input parameter"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "EquipmentClass" : {
        "type" : "object",
        "required" : [ "id", "version", "hierarchyScopeId", "effectiveFrom", "effectiveTo" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "A unique identification of a specific equipment class, within the scope of the information exchanged (production capability, production schedule, production performance, …) The ID shall be used in other parts of the model when the equipment class needs to be identified, such as the production capability for this equipment class, or a production response identifying the equipment class used.",
            "example" : "TRUCKS"
          },
          "version" : {
            "type" : "number",
            "description" : "The version of this Equipment Class described by this message.",
            "example" : 1
          },
          "description" : {
            "type" : "string",
            "description" : "Additional information about the equipment class.",
            "example" : "Ore Hauling Trucks"
          },
          "equipmentLevel" : {
            "type" : "string",
            "description" : "The level of equipment that the Material Class is applicable to.",
            "example" : "Work Unit"
          },
          "parentClassId" : {
            "type" : "string",
            "description" : "The class that this Equipment Class belongs to.",
            "example" : "HAULING"
          },
          "effectiveFrom" : {
            "type" : "string",
            "description" : "The starting time of the applicability of this Equipment Class.",
            "example" : "201808151000"
          },
          "effectiveTo" : {
            "type" : "string",
            "description" : "The ending time of the applicability of this Equipment Class.",
            "example" : "201808151000"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentClassProperty"
            }
          }
        }
      },
      "EquipmentClassProperty" : {
        "type" : "object",
        "required" : [ "id", "value", "valueUnitOfMeasure" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "An identification of the specific property.",
            "example" : "Haul Rate"
          },
          "description" : {
            "type" : "string",
            "description" : "Additional information about the equipment class property.",
            "example" : "The rate that the truck can move material through the road network."
          },
          "value" : {
            "type" : "string",
            "description" : "The value, set of values, or range of the property.",
            "example" : "9400"
          },
          "valueUnitOfMeasure" : {
            "type" : "string",
            "description" : "The unit of measure of the associated property value, if applicable.",
            "example" : "Tonnes/Kilometers/Hour"
          }
        }
      },
      "Equipment" : {
        "type" : "object",
        "required" : [ "id", "version", "equipmentLevel", "hierarchyScopeId", "effectiveFrom", "effectiveTo" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "A unique identification of a specific piece of equipment, within the scope of the information exchanged (manufacturing operations definition, scheduling, capability and performance) The equipment ID shall be used in other parts of the model when the equipment needs to be identified, such as the production capability for a piece of equipment, or a production response identifying the equipment used.",
            "example" : "EX7015"
          },
          "version" : {
            "type" : "number",
            "description" : "The version of this Equipment that this message describes.",
            "example" : 1
          },
          "equipmentLevel" : {
            "type" : "string",
            "description" : "An identification of the level in the role based equipment hierarchy.",
            "example" : "Work Unit"
          },
          "equipmentClassId" : {
            "type" : "string",
            "description" : "The type of this Equipment item",
            "example" : "ER-9400"
          },
          "description" : {
            "type" : "string",
            "description" : "Additional information about the equipment.",
            "example" : "Excavator EX7015"
          },
          "hierarchyScopeId" : {
            "type" : "string",
            "description" : "The part of the supply chain where the Equipment item exists.",
            "example" : "ER-IP"
          },
          "effectiveFrom" : {
            "type" : "string",
            "description" : "The timestamp that this Equipment item version is applicable from.",
            "example" : "201808151000"
          },
          "effectiveTo" : {
            "type" : "string",
            "description" : "The timestamp that this Equipment item version is applicable to.",
            "example" : "201808151000"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EquipmentProperty"
            }
          }
        }
      },
      "EquipmentProperty" : {
        "type" : "object",
        "required" : [ "id", "description", "value", "valueUnitOfMeasure" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "An identification of the specific property.",
            "example" : "DigRate"
          },
          "description" : {
            "type" : "string",
            "description" : "Additional information about the equipment property.",
            "example" : "Dig Rate"
          },
          "value" : {
            "type" : "string",
            "description" : "The value, set of values, or range of the property. The value(s) is assumed to be within the range or set of defined values for the related equipment property.",
            "example" : 3600
          },
          "valueUnitOfMeasure" : {
            "type" : "string",
            "description" : "The unit of measure of the associated property value, if applicable.",
            "example" : "Tonnes/Hour"
          }
        }
      }
    }
  }
}